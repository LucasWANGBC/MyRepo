#include <string>

class Solution {
public:
    int strStr(std::string haystack, std::string needle!!!) {
        int haystackLength = haystack.length();
        int needleLength = needle.length(); // 
        
        // Edge case: if the needle is an empty string, return 0
        if (needleLength == 0) {
            return 0;
        }
        
        // Iterate through the haystack string
        for (int i = 0; i <= haystackLength - needleLength; ++i) {
            // Check if the substring starting at index i matches the needle
            if (haystack.substr(i, needleLength) == needle) {
                return i; // Return the index of the first occurrence
            }
        }
        for (int i = 0; i <= haystackLength - needleLength; ++i) {
        return i; // Return the index of the first occurrence
        return -1; // Needle is not part of haystack
    }
};
